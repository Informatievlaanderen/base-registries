{
  "name": "base-registries",
  "version": "2.0.1",
  "description": "Public site of the Base Registries.",
  "author": "Basisregisters Vlaanderen",
  "repository": {
    "type": "git",
    "url": "git@github.com:informatievlaanderen/base-registries.git"
  },
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build --modern",
    "lint": "vue-cli-service lint",
    "commit": "git-cz",
    "i18n:report": "vue-cli-service i18n:report --src './src/**/*.?(js|vue)' --locales './src/locales/**/*.json'",
    "semantic-release": "semantic-release"
  },
  "dependencies": {
    "axios": "0.26.1",
    "core-js": "3.21.1",
    "frontmatter-markdown-loader": "3.6.3",
    "vue": "3.2.31",
    "vue-i18n": "8.27.1",
    "vue-markdown": "2.2.4",
    "vue-router": "4.0.14",
    "vue-scrollto": "2.20.0",
    "vuex": "4.0.2"
  },
  "devDependencies": {
    "@commitlint/cli": "16.2.3",
    "@commitlint/config-conventional": "16.2.1",
    "@commitlint/prompt": "16.2.3",
    "@kazupon/vue-i18n-loader": "0.5.0",
    "@semantic-release/changelog": "6.0.1",
    "@semantic-release/commit-analyzer": "9.0.2",
    "@semantic-release/exec": "6.0.3",
    "@semantic-release/git": "10.0.1",
    "@semantic-release/github": "8.0.4",
    "@semantic-release/npm": "9.0.1",
    "@semantic-release/release-notes-generator": "10.0.3",
    "@vue/cli-plugin-babel": "5.0.4",
    "@vue/cli-plugin-eslint": "5.0.4",
    "@vue/cli-service": "5.0.4",
    "babel-eslint": "10.1.0",
    "commitizen": "4.2.4",
    "cz-conventional-changelog": "3.3.0",
    "eslint": "8.12.0",
    "eslint-config-vuetify": "0.6.1",
    "eslint-plugin-babel": "5.3.1",
    "eslint-plugin-vue": "8.5.0",
    "form-data": "4.0.0",
    "husky": "7.0.4",
    "lodash": "4.17.21",
    "merge": "2.1.1",
    "sass": "1.49.9",
    "sass-loader": "12.6.0",
    "semantic-release": "19.0.2",
    "vue-cli-plugin-i18n": "2.3.1",
    "vue-template-compiler": "2.6.14"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "license": "EUPL-1.2",
  "release": {
    "branches": [
      "master",
      "main"
    ],
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "analyzeCommits": {
      "path": "@semantic-release/commit-analyzer",
      "preset": "angular",
      "releaseRules": [
        {
          "breaking": true,
          "release": "major"
        },
        {
          "type": "docs",
          "scope": "README",
          "release": "patch"
        },
        {
          "type": "refactor",
          "release": "patch"
        },
        {
          "type": "chore",
          "scope": "breaking",
          "release": "major"
        }
      ],
      "parserOpts": {
        "noteKeywords": [
          "BREAKING CHANGE",
          "BREAKING CHANGES",
          "BREAKING"
        ]
      }
    },
    "generateNotes": {
      "path": "@semantic-release/release-notes-generator",
      "preset": "angular",
      "parserOpts": {
        "noteKeywords": [
          "BREAKING CHANGE",
          "BREAKING CHANGES",
          "BREAKING"
        ]
      },
      "writerOpts": {
        "commitsSort": [
          "scope",
          "subject"
        ]
      }
    },
    "prepare": [
      {
        "path": "@semantic-release/changelog",
        "changelogFile": "CHANGELOG.md"
      },
      {
        "path": "@semantic-release/npm",
        "npmPublish": false
      },
      {
        "path": "@semantic-release/exec",
        "cmd": "echo ${nextRelease.version} > semver"
      },
      {
        "path": "@semantic-release/exec",
        "cmd": "CI_BUILD_NUMBER=${nextRelease.version} ./build.sh BuildContainer"
      },
      {
        "path": "@semantic-release/git",
        "assets": [
          "CHANGELOG.md",
          "package.json",
          "package-lock.json"
        ],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }
    ],
    "publish": [],
    "success": [
      "@semantic-release/github"
    ],
    "fail": false
  }
}
