perl_set ${DOLLAR}uri_lowercase 'sub {
    my ${DOLLAR}r = shift;
    my ${DOLLAR}uri = ${DOLLAR}r->uri;
    my ${DOLLAR}args = ${DOLLAR}r->args;

    ${DOLLAR}uri = lc(${DOLLAR}uri);

    if (${DOLLAR}args) {
      ${DOLLAR}args = lc(${DOLLAR}args);
      return ${DOLLAR}uri . "?" . ${DOLLAR}args;
    } else {
      return ${DOLLAR}uri;
    }
}';

server {
    listen 80;
    listen [::]:80;
    server_name  localhost;
    # server_name basisregisters.vlaanderen;
    gzip on;
    gzip_http_version  1.0;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;
    # Compress all output labeled with one of the following MIME-types.
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/rss+xml
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/plain
      text/x-component;
      # text/html is always compressed by HttpGzipModule

    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files ${DOLLAR}uri ${DOLLAR}uri/ /index.html;
    }
    ## Disables emitting nginx version in error messages and in the “Server” response header field.
    server_tokens off;

    # Add HSTS
    # if (${DOLLAR}http_x_forwarded_proto = "https") {
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # }

    # Add CORS
    add_header 'Access-Control-Allow-Origin' "*" always;

    # Just allow GET, HEAD and OPTIONS
    if (${DOLLAR}request_method !~ ^(GET|HEAD|OPTIONS)${DOLLAR}) {
      return 405;
    }

    # Redirect index.html to parent
    if (${DOLLAR}request_uri ~* "^(.*/)index\.html$") {
      return 301 ${DOLLAR}1;
    }

    # Dont lowercase VERSION
    if (${DOLLAR}request_uri ~* "^(.*/)VERSION") {
      break;
    }
    
    # Dont lowercase docs and redirect /docs/ to specific item
    if (${DOLLAR}request_uri ~* "^(.*/)docs/(.*)") {
      return 301 https://docs.${REPLACE_ALIAS_ZONE_NAME}/docs/api-documentation.html#tag/${DOLLAR}2;
    }

    # Dont lowercase docs and redirect /docs to docs
    if (${DOLLAR}request_uri ~* "^(.*/)docs") {
      return 301 https://docs.${REPLACE_ALIAS_ZONE_NAME}/;
    }

    # Dont lowercase wiki
    if (${DOLLAR}request_uri ~* "^(.*/)wiki") {
      break;
    }
    if (${DOLLAR}request_uri ~* "^(.*/)wiki(.*)") {
      break;
    }

    # Dont lowercase help and redirect /help to docs
    if (${DOLLAR}request_uri ~* "^(.*/)help") {
      return 301 https://docs.${REPLACE_ALIAS_ZONE_NAME}/;
    }

    # This is the most stupidest thing I've ever seen
    # Enforce all lowercase
    # if (${DOLLAR}request_uri ~ "[A-Z]") {
    #   return 301 https://${DOLLAR}host${DOLLAR}uri_lowercase;
    # }

    # https://stackoverflow.com/questions/40810219/nginx-301-redirect-with-query-string
    if (${DOLLAR}request_uri ~* "^(.*/)api/(.*)") {
      return 301 https://api.${REPLACE_ALIAS_ZONE_NAME}/${DOLLAR}2;
    }

    # proxy passes (Path rewrites in sync with vue.config file)

    location /basisregisters-api/foutmeldingen {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://api.${REPLACE_ALIAS_ZONE_NAME}/foutmeldingen;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location /basisregisters-api/v1 {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://api.${REPLACE_ALIAS_ZONE_NAME}/v1;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }
    
    location /basisregisters-api/v2 {
         proxy_redirect off;
         proxy_ssl_server_name on;
         proxy_pass https://api.${REPLACE_ALIAS_ZONE_NAME}/v2;
         proxy_set_header X-Robots-Tag "noindex, nofollow";
         proxy_set_header x-api-key ${API_KEY};
   }

    location ^~ /assets/oslo {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://raw.githubusercontent.com/Informatievlaanderen/data.vlaanderen.be-generated/dev;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location /assets/locales {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://raw.githubusercontent.com/Informatievlaanderen/base-registries-content/${REPLACE_ALIAS_BRANCH_CONTENT}/locales;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location /changelogs/road-registry {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://raw.githubusercontent.com/Informatievlaanderen/road-registry/main/CHANGELOG.md;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location /wiki {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://raw.githubusercontent.com/wiki;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location /github {
        proxy_redirect off;
        proxy_ssl_server_name on;
        proxy_pass https://api.github.com/orgs/Informatievlaanderen;
        proxy_set_header X-Robots-Tag "noindex, nofollow";
    }

    location ~ /\.git {
      deny all;
    }

    location ~ /\.svn {
      deny all;
    }
}
